<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.2.2 (Python 3.13.2 on win32)" generated="2025-05-15T20:14:13.504555" rpa="false" schemaversion="5">
<suite id="s1" name="modifyUser" source="C:\QAx\projects\loopiclub-robot\tests\modifyUser.robot">
<kw name="Set Appium Timeout" owner="AppiumLibrary" type="SETUP">
<arg>30s</arg>
<doc>Sets the timeout in seconds used by various keywords.</doc>
<status status="PASS" start="2025-05-15T20:14:14.139295" elapsed="0.000196"/>
</kw>
<test id="s1-t1" name="Deve alterar os dados do usuário" line="12">
<kw name="Dado que o app foi iniciado e o usuário está logado">
<kw name="E que o usuário iniciou a sessão no app" owner="keywords">
<kw name="Open Application" owner="AppiumLibrary">
<arg>http://localhost:4723</arg>
<arg>platformName=${PLATFORM_NAME}</arg>
<arg>deviceName=${DEVICE_NAME}</arg>
<arg>automationName=UIAutomator2</arg>
<arg>app=${EXECDIR}/app/app-${app}-release.apk</arg>
<arg>udid=emulator-5554</arg>
<arg>autoGrantPermissions=true</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://appium.io/docs/en/2.1/cli/args/
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" start="2025-05-15T20:14:14.140525" elapsed="11.860257"/>
</kw>
<arg>loopiclub</arg>
<status status="PASS" start="2025-05-15T20:14:14.140332" elapsed="11.860629"/>
</kw>
<kw name="E o usuário seleciona o idioma" owner="keywords">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:28.162009" level="INFO">xpath criteria: //android.widget.FrameLayout[@resource-id="android:id/content"]/android.widget.FrameLayout</msg>
<arg>xpath=//android.widget.FrameLayout[@resource-id="android:id/content"]/android.widget.FrameLayout</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:26.001569" elapsed="2.160514"/>
</kw>
<kw name="Wait Until Page Contains" owner="AppiumLibrary">
<arg>${LANGUAGE['${language_choose}']['text']}</arg>
<doc>Waits until `text` appears on current page.</doc>
<status status="PASS" start="2025-05-15T20:14:28.162204" elapsed="2.197610"/>
</kw>
<kw name="Wait Until Page Contains" owner="AppiumLibrary">
<arg>${LANGUAGE['${language_choose}']['idioma']}</arg>
<doc>Waits until `text` appears on current page.</doc>
<status status="PASS" start="2025-05-15T20:14:30.360136" elapsed="0.569309"/>
</kw>
<kw name="Click Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:31.115161" level="INFO">xpath criteria: //*[contains(@text,"Português (Brasil)")]</msg>
<arg>${LANGUAGE['${language_choose}']['idioma']}</arg>
<doc>Click text identified by ``text``.</doc>
<status status="PASS" start="2025-05-15T20:14:30.929603" elapsed="0.185627"/>
</kw>
<arg>ptBr</arg>
<status status="PASS" start="2025-05-15T20:14:26.001194" elapsed="5.114105"/>
</kw>
<kw name="Quando o usuário faz login com o usuário" owner="keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:31.115777" level="INFO">${email} = xpath=//android.widget.EditText[@text="E-mail"]</msg>
<var>${email}</var>
<arg>xpath=//android.widget.EditText[@text="E-mail"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:31.115661" elapsed="0.000140"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:31.117207" level="INFO">Typing text 'lucasinboxtest@gmail.com' into text field 'xpath=//android.widget.EditText[@text="E-mail"]'</msg>
<msg time="2025-05-15T20:14:32.005702" level="INFO">xpath criteria: //android.widget.EditText[@text="E-mail"]</msg>
<arg>${email}</arg>
<arg>${USER['${user_choose}']['email']}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:31.115875" elapsed="0.889924"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:32.006102" level="INFO">${senha} = xpath=//android.widget.EditText[@text="Senha"]</msg>
<var>${senha}</var>
<arg>xpath=//android.widget.EditText[@text="Senha"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:32.005947" elapsed="0.000179"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:32.009670" level="INFO">Typing text 'Senha1*' into text field 'xpath=//android.widget.EditText[@text="Senha"]'</msg>
<msg time="2025-05-15T20:14:33.094411" level="INFO">xpath criteria: //android.widget.EditText[@text="Senha"]</msg>
<arg>${senha}</arg>
<arg>${USER['${user_choose}']['senha']}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:32.006263" elapsed="1.088238"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:33.094915" level="INFO">${entrar} = xpath=//android.widget.TextView[@text="ENTRAR"]</msg>
<var>${entrar}</var>
<arg>xpath=//android.widget.TextView[@text="ENTRAR"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:33.094745" elapsed="0.000195"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:33.096143" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="ENTRAR"]'.</msg>
<msg time="2025-05-15T20:14:33.737254" level="INFO">xpath criteria: //android.widget.TextView[@text="ENTRAR"]</msg>
<arg>${entrar}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:33.095029" elapsed="0.642331"/>
</kw>
<arg>USER1</arg>
<status status="PASS" start="2025-05-15T20:14:31.115442" elapsed="2.622023"/>
</kw>
<kw name="Então a tela inicial do app é carregada corretamente" owner="keywords">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:34.857081" level="INFO">xpath criteria: //android.widget.FrameLayout[@resource-id="android:id/content"]</msg>
<arg>xpath=//android.widget.FrameLayout[@resource-id="android:id/content"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:33.738039" elapsed="1.119116"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:39.594997" level="INFO">xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]
xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]
xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]
xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]
xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]
xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]
xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]
xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]
xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]
xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]
xpath criteria: //android.widget.TextView[@text="Bem-vindo,"]</msg>
<arg>${TEXT_VIEW}\[@text="Bem-vindo,"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:34.857272" elapsed="4.737869"/>
</kw>
<status status="PASS" start="2025-05-15T20:14:33.737699" elapsed="5.857583"/>
</kw>
<status status="PASS" start="2025-05-15T20:14:14.140114" elapsed="25.455228"/>
</kw>
<kw name="Quando o usuário acessa a tela de edição de dados">
<kw name="Acessar Menu" owner="keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:39.597772" level="INFO">${item_text} = xpath=//android.widget.TextView[@text="Mais"]</msg>
<var>${item_text}</var>
<arg>${TEXT_VIEW}\[@text="${menu_item}"\]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:39.597305" elapsed="0.000525"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:41.192392" level="INFO">xpath criteria: //android.widget.TextView[@text="Mais"]</msg>
<arg>${item_text}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:39.598210" elapsed="1.594249"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:41.193668" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Mais"]'.</msg>
<msg time="2025-05-15T20:14:41.420380" level="INFO">xpath criteria: //android.widget.TextView[@text="Mais"]</msg>
<arg>${item_text}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:41.192577" elapsed="0.227877"/>
</kw>
<arg>Mais</arg>
<status status="PASS" start="2025-05-15T20:14:39.596832" elapsed="1.823689"/>
</kw>
<kw name="Esperar por" owner="keywords">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:42.348197" level="INFO">xpath criteria: //android.view.View[@text="Perfil"]
xpath criteria: //android.view.View[@text="Perfil"]</msg>
<arg>${page_header}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:41.421048" elapsed="0.927224"/>
</kw>
<arg>${mais_header}</arg>
<status status="PASS" start="2025-05-15T20:14:41.420653" elapsed="0.927691"/>
</kw>
<kw name="Acessar opção" owner="keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:42.348870" level="INFO">${user_data} = xpath=//android.widget.TextView[@text="Atualizar dados de usuário"]</msg>
<var>${user_data}</var>
<arg>xpath=//android.widget.TextView[@text="${menu_data}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:42.348723" elapsed="0.000171"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:42.515859" level="INFO">xpath criteria: //android.widget.TextView[@text="Atualizar dados de usuário"]</msg>
<arg>${user_data}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:42.348972" elapsed="0.167002"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:42.517484" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Atualizar dados de usuário"]'.</msg>
<msg time="2025-05-15T20:14:42.723282" level="INFO">xpath criteria: //android.widget.TextView[@text="Atualizar dados de usuário"]</msg>
<arg>${user_data}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:42.516162" elapsed="0.207199"/>
</kw>
<arg>Atualizar dados de usuário</arg>
<status status="PASS" start="2025-05-15T20:14:42.348490" elapsed="0.374947"/>
</kw>
<kw name="Espera vários campos de inserção" owner="keywords">
<for flavor="IN RANGE">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:42.724623" level="INFO">${xpath_locator} = xpath=//android.widget.EditText[1]</msg>
<var>${xpath_locator}</var>
<arg>xpath=//android.widget.EditText[${index + 1}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:42.724132" elapsed="0.000515"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:43.798681" level="INFO">xpath criteria: //android.widget.EditText[1]
xpath criteria: //android.widget.EditText[1]</msg>
<arg>${xpath_locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:42.724730" elapsed="1.074065"/>
</kw>
<var name="${index}">0</var>
<status status="PASS" start="2025-05-15T20:14:42.724052" elapsed="1.074799"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:43.799729" level="INFO">${xpath_locator} = xpath=//android.widget.EditText[2]</msg>
<var>${xpath_locator}</var>
<arg>xpath=//android.widget.EditText[${index + 1}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:43.799121" elapsed="0.000634"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:43.898869" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${xpath_locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:43.799843" elapsed="0.099096"/>
</kw>
<var name="${index}">1</var>
<status status="PASS" start="2025-05-15T20:14:43.799004" elapsed="0.099976"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:43.899695" level="INFO">${xpath_locator} = xpath=//android.widget.EditText[3]</msg>
<var>${xpath_locator}</var>
<arg>xpath=//android.widget.EditText[${index + 1}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:43.899177" elapsed="0.000546"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:44.003464" level="INFO">xpath criteria: //android.widget.EditText[3]</msg>
<arg>${xpath_locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:43.899807" elapsed="0.103718"/>
</kw>
<var name="${index}">2</var>
<status status="PASS" start="2025-05-15T20:14:43.899091" elapsed="0.104473"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:44.004275" level="INFO">${xpath_locator} = xpath=//android.widget.EditText[4]</msg>
<var>${xpath_locator}</var>
<arg>xpath=//android.widget.EditText[${index + 1}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:44.003760" elapsed="0.000538"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:44.094215" level="INFO">xpath criteria: //android.widget.EditText[4]</msg>
<arg>${xpath_locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:44.004379" elapsed="0.089903"/>
</kw>
<var name="${index}">3</var>
<status status="PASS" start="2025-05-15T20:14:44.003671" elapsed="0.090657"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:44.095223" level="INFO">${xpath_locator} = xpath=//android.widget.EditText[5]</msg>
<var>${xpath_locator}</var>
<arg>xpath=//android.widget.EditText[${index + 1}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:44.094565" elapsed="0.000687"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:44.188098" level="INFO">xpath criteria: //android.widget.EditText[5]</msg>
<arg>${xpath_locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:44.095359" elapsed="0.092801"/>
</kw>
<var name="${index}">4</var>
<status status="PASS" start="2025-05-15T20:14:44.094457" elapsed="0.093745"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:44.188915" level="INFO">${xpath_locator} = xpath=//android.widget.EditText[6]</msg>
<var>${xpath_locator}</var>
<arg>xpath=//android.widget.EditText[${index + 1}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:44.188396" elapsed="0.000543"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:44.276276" level="INFO">xpath criteria: //android.widget.EditText[6]</msg>
<arg>${xpath_locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:44.189020" elapsed="0.087317"/>
</kw>
<var name="${index}">5</var>
<status status="PASS" start="2025-05-15T20:14:44.188308" elapsed="0.088069"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:44.277107" level="INFO">${xpath_locator} = xpath=//android.widget.EditText[7]</msg>
<var>${xpath_locator}</var>
<arg>xpath=//android.widget.EditText[${index + 1}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:44.276568" elapsed="0.000564"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:44.369560" level="INFO">xpath criteria: //android.widget.EditText[7]</msg>
<arg>${xpath_locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:44.277218" elapsed="0.092403"/>
</kw>
<var name="${index}">6</var>
<status status="PASS" start="2025-05-15T20:14:44.276481" elapsed="0.093180"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:44.370393" level="INFO">${xpath_locator} = xpath=//android.widget.EditText[8]</msg>
<var>${xpath_locator}</var>
<arg>xpath=//android.widget.EditText[${index + 1}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:44.369858" elapsed="0.000560"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:44.459967" level="INFO">xpath criteria: //android.widget.EditText[8]</msg>
<arg>${xpath_locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:44.370505" elapsed="0.089527"/>
</kw>
<var name="${index}">7</var>
<status status="PASS" start="2025-05-15T20:14:44.369767" elapsed="0.090304"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:14:44.460758" level="INFO">${xpath_locator} = xpath=//android.widget.EditText[9]</msg>
<var>${xpath_locator}</var>
<arg>xpath=//android.widget.EditText[${index + 1}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:14:44.460257" elapsed="0.000524"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:44.563909" level="INFO">xpath criteria: //android.widget.EditText[9]</msg>
<arg>${xpath_locator}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:44.460862" elapsed="0.103119"/>
</kw>
<var name="${index}">8</var>
<status status="PASS" start="2025-05-15T20:14:44.460172" elapsed="0.103852"/>
</iter>
<var>${index}</var>
<value>0</value>
<value>${INSTANCE_COUNT}</value>
<status status="PASS" start="2025-05-15T20:14:42.723861" elapsed="1.840198"/>
</for>
<arg>9</arg>
<status status="PASS" start="2025-05-15T20:14:42.723640" elapsed="1.840489"/>
</kw>
<status status="PASS" start="2025-05-15T20:14:39.596116" elapsed="4.968057"/>
</kw>
<kw name="E altera os dados com novas informações">
<kw name="Edita os dados do usuário" owner="keywords">
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:44.566304" level="INFO">Typing text '01234567890' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2025-05-15T20:14:45.182270" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${field_cpf}</arg>
<arg>${USER2["cpf"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:44.564870" elapsed="0.617528"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:45.184660" level="INFO">Typing text 'Quentin Alves' into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2025-05-15T20:14:46.330526" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${field_name}</arg>
<arg>${USER2["name"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:45.182647" elapsed="1.147975"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:46.333104" level="INFO">Typing text 'Novais' into text field 'xpath=//android.widget.EditText[3]'</msg>
<msg time="2025-05-15T20:14:47.459162" level="INFO">xpath criteria: //android.widget.EditText[3]</msg>
<arg>${field_lastname}</arg>
<arg>${USER2["lastname"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:46.330806" elapsed="1.128426"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:47.460804" level="INFO">Typing text '61891998819' into text field 'xpath=//android.widget.EditText[5]'</msg>
<msg time="2025-05-15T20:14:48.580911" level="INFO">xpath criteria: //android.widget.EditText[5]</msg>
<arg>${field_telefone}</arg>
<arg>${USER2["telefone"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:47.459351" elapsed="1.121640"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:48.583159" level="INFO">Typing text 'QA2' into text field 'xpath=//android.widget.EditText[6]'</msg>
<msg time="2025-05-15T20:14:49.742820" level="INFO">xpath criteria: //android.widget.EditText[6]</msg>
<arg>${field_apelido}</arg>
<arg>${USER2["apelido"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:48.581144" elapsed="1.161750"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:49.744495" level="INFO">Typing text '@insta2' into text field 'xpath=//android.widget.EditText[7]'</msg>
<msg time="2025-05-15T20:14:50.866631" level="INFO">xpath criteria: //android.widget.EditText[7]</msg>
<arg>${field_instagram}</arg>
<arg>${USER2["instagram"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:49.743014" elapsed="1.123708"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:50.869060" level="INFO">Typing text '@face2' into text field 'xpath=//android.widget.EditText[8]'</msg>
<msg time="2025-05-15T20:14:51.977798" level="INFO">xpath criteria: //android.widget.EditText[8]</msg>
<arg>${field_facebook}</arg>
<arg>${USER2["facebook"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:50.866900" elapsed="1.110992"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:51.980192" level="INFO">Typing text '@tiktok2' into text field 'xpath=//android.widget.EditText[9]'</msg>
<msg time="2025-05-15T20:14:53.114149" level="INFO">xpath criteria: //android.widget.EditText[9]</msg>
<arg>${field_tiktok}</arg>
<arg>${USER2["tiktok"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:51.978081" elapsed="1.136154"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:53.116075" level="INFO">Clicking element 'xpath=//android.view.ViewGroup[@content-desc="Confirmar"]'.</msg>
<msg time="2025-05-15T20:14:53.750114" level="INFO">xpath criteria: //android.view.ViewGroup[@content-desc="Confirmar"]</msg>
<arg>xpath=//android.view.ViewGroup[@content-desc="Confirmar"]</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:53.114403" elapsed="0.635794"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:55.579483" level="INFO">criteria is android:id/button1
criteria is android:id/button1</msg>
<arg>id=android:id/button1</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:53.750329" elapsed="1.829282"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:55.581254" level="INFO">Clicking element 'id=android:id/button1'.</msg>
<msg time="2025-05-15T20:14:55.674498" level="INFO">criteria is android:id/button1</msg>
<arg>id=android:id/button1</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:55.579738" elapsed="0.094825"/>
</kw>
<status status="PASS" start="2025-05-15T20:14:44.564699" elapsed="11.109928"/>
</kw>
<status status="PASS" start="2025-05-15T20:14:44.564418" elapsed="11.110252"/>
</kw>
<kw name="E retorna os dados originais do usuário">
<kw name="Retorna os Dados de Usuário" owner="keywords">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:56.275151" level="INFO">xpath criteria: //android.widget.TextView[@text="Atualizar dados de usuário"]</msg>
<arg>xpath=//android.widget.TextView[@text="Atualizar dados de usuário"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:55.675371" elapsed="0.599866"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:56.277067" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Atualizar dados de usuário"]'.</msg>
<msg time="2025-05-15T20:14:56.669683" level="INFO">xpath criteria: //android.widget.TextView[@text="Atualizar dados de usuário"]</msg>
<arg>xpath=//android.widget.TextView[@text="Atualizar dados de usuário"]</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:56.275398" elapsed="0.394357"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:57.732723" level="INFO">xpath criteria: //android.view.View[@text="Dados do Usuário"]
xpath criteria: //android.view.View[@text="Dados do Usuário"]</msg>
<arg>xpath=//android.view.View[@text="Dados do Usuário"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:14:56.669881" elapsed="1.062910"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:57.734543" level="INFO">Typing text '04547531102' into text field 'xpath=//android.widget.EditText[1]'</msg>
<msg time="2025-05-15T20:14:58.333058" level="INFO">xpath criteria: //android.widget.EditText[1]</msg>
<arg>${field_cpf}</arg>
<arg>${USER1["cpf"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:57.732907" elapsed="0.600217"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:58.334644" level="INFO">Typing text 'Quentin' into text field 'xpath=//android.widget.EditText[2]'</msg>
<msg time="2025-05-15T20:14:59.583216" level="INFO">xpath criteria: //android.widget.EditText[2]</msg>
<arg>${field_name}</arg>
<arg>${USER1["name"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:58.333284" elapsed="1.250033"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:14:59.586886" level="INFO">Typing text 'Alves' into text field 'xpath=//android.widget.EditText[3]'</msg>
<msg time="2025-05-15T20:15:01.210475" level="INFO">xpath criteria: //android.widget.EditText[3]</msg>
<arg>${field_lastname}</arg>
<arg>${USER1["lastname"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:14:59.583501" elapsed="1.627042"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:01.212276" level="INFO">Typing text '(61) 98918-9189' into text field 'xpath=//android.widget.EditText[5]'</msg>
<msg time="2025-05-15T20:15:02.342443" level="INFO">xpath criteria: //android.widget.EditText[5]</msg>
<arg>${field_telefone}</arg>
<arg>${USER1["telefone"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:15:01.210665" elapsed="1.131843"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:02.344116" level="INFO">Typing text 'QA' into text field 'xpath=//android.widget.EditText[6]'</msg>
<msg time="2025-05-15T20:15:03.426302" level="INFO">xpath criteria: //android.widget.EditText[6]</msg>
<arg>${field_apelido}</arg>
<arg>${USER1["apelido"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:15:02.342637" elapsed="1.083734"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:03.427887" level="INFO">Typing text '@insta' into text field 'xpath=//android.widget.EditText[7]'</msg>
<msg time="2025-05-15T20:15:04.561521" level="INFO">xpath criteria: //android.widget.EditText[7]</msg>
<arg>${field_instagram}</arg>
<arg>${USER1["instagram"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:15:03.426491" elapsed="1.135141"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:04.563547" level="INFO">Typing text '@face' into text field 'xpath=//android.widget.EditText[8]'</msg>
<msg time="2025-05-15T20:15:05.677987" level="INFO">xpath criteria: //android.widget.EditText[8]</msg>
<arg>${field_facebook}</arg>
<arg>${USER1["facebook"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:15:04.561821" elapsed="1.116266"/>
</kw>
<kw name="Input Text" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:05.680312" level="INFO">Typing text '@tiktok' into text field 'xpath=//android.widget.EditText[9]'</msg>
<msg time="2025-05-15T20:15:06.815900" level="INFO">xpath criteria: //android.widget.EditText[9]</msg>
<arg>${field_tiktok}</arg>
<arg>${USER1["tiktok"]}</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:15:05.678275" elapsed="1.137715"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:06.817985" level="INFO">Clicking element 'xpath=//android.view.ViewGroup[@content-desc="Confirmar"]'.</msg>
<msg time="2025-05-15T20:15:07.438503" level="INFO">xpath criteria: //android.view.ViewGroup[@content-desc="Confirmar"]</msg>
<arg>xpath=//android.view.ViewGroup[@content-desc="Confirmar"]</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:15:06.816168" elapsed="0.622405"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:09.290664" level="INFO">criteria is android:id/button1
criteria is android:id/button1</msg>
<arg>id=android:id/button1</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:07.438698" elapsed="1.852028"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:09.291978" level="INFO">Clicking element 'id=android:id/button1'.</msg>
<msg time="2025-05-15T20:15:09.912104" level="INFO">criteria is android:id/button1</msg>
<arg>id=android:id/button1</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:15:09.290844" elapsed="0.621355"/>
</kw>
<status status="PASS" start="2025-05-15T20:14:55.675200" elapsed="14.237097"/>
</kw>
<status status="PASS" start="2025-05-15T20:14:55.674935" elapsed="14.237425"/>
</kw>
<kw name="Então os dados exibidos devem estar corretos">
<kw name="Acessar Menu" owner="keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:15:09.913877" level="INFO">${item_text} = xpath=//android.widget.TextView[@text="Mais"]</msg>
<var>${item_text}</var>
<arg>${TEXT_VIEW}\[@text="${menu_item}"\]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:15:09.913463" elapsed="0.000577"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:10.280828" level="INFO">xpath criteria: //android.widget.TextView[@text="Mais"]</msg>
<arg>${item_text}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:09.914164" elapsed="0.366735"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:10.282203" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Mais"]'.</msg>
<msg time="2025-05-15T20:15:10.469337" level="INFO">xpath criteria: //android.widget.TextView[@text="Mais"]</msg>
<arg>${item_text}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:15:10.281023" elapsed="0.188380"/>
</kw>
<arg>Mais</arg>
<status status="PASS" start="2025-05-15T20:15:09.913138" elapsed="0.556333"/>
</kw>
<kw name="Validar texto da página &quot;Mais&quot;" owner="keywords">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:10.588258" level="INFO">xpath criteria: //android.widget.TextView[@text="Quentin Alves"]</msg>
<arg>${TEXT_VIEW}\[@text="${USER1["name"]} ${USER1["lastname"]}"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:10.469880" elapsed="0.118444"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:10.714261" level="INFO">xpath criteria: //android.widget.TextView[@text="lucasinboxtest@gmail.com"]</msg>
<arg>${TEXT_VIEW}\[@text="${USER1["email"]}"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:10.588443" elapsed="0.125881"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:10.835874" level="INFO">xpath criteria: //android.widget.TextView[@text="Português (Brasil)"]</msg>
<arg>${TEXT_VIEW}\[@text="Português (Brasil)"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:10.714440" elapsed="0.121513"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:10.960421" level="INFO">xpath criteria: //android.widget.TextView[@text="Fale conosco"]</msg>
<arg>${TEXT_VIEW}\[@text="Fale conosco"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:10.836078" elapsed="0.124406"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:11.083739" level="INFO">xpath criteria: //android.widget.TextView[@text="Regulamento e Termos de uso"]</msg>
<arg>${TEXT_VIEW}\[@text="Regulamento e Termos de uso"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:10.960601" elapsed="0.123201"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:11.205307" level="INFO">xpath criteria: //android.widget.TextView[@text="Carteirinha"]</msg>
<arg>${TEXT_VIEW}\[@text="Carteirinha"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:11.083916" elapsed="0.121453"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:11.321425" level="INFO">xpath criteria: //android.widget.TextView[@text="Minhas Compras"]</msg>
<arg>${TEXT_VIEW}\[@text="Minhas Compras"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:11.205486" elapsed="0.116003"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:11.438856" level="INFO">xpath criteria: //android.widget.TextView[@text="Encerrar conta"]</msg>
<arg>${TEXT_VIEW}\[@text="Encerrar conta"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:11.321603" elapsed="0.117315"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:11.562051" level="INFO">xpath criteria: //android.widget.TextView[@text="Sair"]</msg>
<arg>${TEXT_VIEW}\[@text="Sair"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:11.439035" elapsed="0.123085"/>
</kw>
<status status="PASS" start="2025-05-15T20:15:10.469638" elapsed="1.092549"/>
</kw>
<kw name="Acessar opção" owner="keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-05-15T20:15:11.562691" level="INFO">${user_data} = xpath=//android.widget.TextView[@text="Atualizar dados de usuário"]</msg>
<var>${user_data}</var>
<arg>xpath=//android.widget.TextView[@text="${menu_data}"]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-05-15T20:15:11.562554" elapsed="0.000165"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:11.679301" level="INFO">xpath criteria: //android.widget.TextView[@text="Atualizar dados de usuário"]</msg>
<arg>${user_data}</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="PASS" start="2025-05-15T20:15:11.562793" elapsed="0.116575"/>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:11.680574" level="INFO">Clicking element 'xpath=//android.widget.TextView[@text="Atualizar dados de usuário"]'.</msg>
<msg time="2025-05-15T20:15:11.861389" level="INFO">xpath criteria: //android.widget.TextView[@text="Atualizar dados de usuário"]</msg>
<arg>${user_data}</arg>
<doc>Click element identified by `locator`.</doc>
<status status="PASS" start="2025-05-15T20:15:11.679488" elapsed="0.182004"/>
</kw>
<arg>Atualizar dados de usuário</arg>
<status status="PASS" start="2025-05-15T20:15:11.562329" elapsed="0.299245"/>
</kw>
<kw name="Validar Dados User 1" owner="keywords">
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<kw name="Capture Page Screenshot" owner="AppiumLibrary">
<msg time="2025-05-15T20:15:13.290143" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<status status="PASS" start="2025-05-15T20:15:12.860438" elapsed="0.430890"/>
</kw>
<msg time="2025-05-15T20:15:13.291393" level="INFO">xpath criteria: //android.widget.TextView[@text="Atualizar dados de usuário"]</msg>
<msg time="2025-05-15T20:15:13.291562" level="FAIL">StaleElementReferenceException: Message: Cached elements 'By.xpath: //android.widget.TextView[@text="Atualizar dados de usuário"]' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.xpath: //android.widget.TextView[@text="Atualizar dados de usuário"]' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1119)
</msg>
<arg>xpath=//android.widget.TextView[@text="Atualizar dados de usuário"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="FAIL" start="2025-05-15T20:15:11.862060" elapsed="1.459393">StaleElementReferenceException: Message: Cached elements 'By.xpath: //android.widget.TextView[@text="Atualizar dados de usuário"]' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.xpath: //android.widget.TextView[@text="Atualizar dados de usuário"]' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1119)</status>
</kw>
<kw name="Click Element" owner="AppiumLibrary">
<arg>xpath=//android.widget.TextView[@text="Atualizar dados de usuário"]</arg>
<doc>Click element identified by `locator`.</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.321679" elapsed="0.000031"/>
</kw>
<kw name="Wait Until Element Is Visible" owner="AppiumLibrary">
<arg>xpath=//android.view.View[@text="Dados do Usuário"]</arg>
<doc>Waits until element specified with `locator` is visible.</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.321795" elapsed="0.000017"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${name}</var>
<arg>${field_name}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.321881" elapsed="0.000016"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${name}</arg>
<arg>${USER1["name"]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.321969" elapsed="0.000015"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${lastname}</var>
<arg>${field_lastname}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322049" elapsed="0.000014"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${lastname}</arg>
<arg>${USER1["lastname"]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322163" elapsed="0.000016"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${telefone}</var>
<arg>${field_telefone}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322245" elapsed="0.000017"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${telefone}</arg>
<arg>${USER1["telefone"]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322330" elapsed="0.000014"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${apelido}</var>
<arg>${field_apelido}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322406" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${apelido}</arg>
<arg>${USER1["apelido"]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322488" elapsed="0.000015"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${instagram}</var>
<arg>${field_instagram}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322563" elapsed="0.000014"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${instagram}</arg>
<arg>${USER1["instagram"]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322641" elapsed="0.000014"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${facebook}</var>
<arg>${field_facebook}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322715" elapsed="0.000014"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${facebook}</arg>
<arg>${USER1["facebook"]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322794" elapsed="0.000015"/>
</kw>
<kw name="Get Text" owner="AppiumLibrary">
<var>${tiktok}</var>
<arg>${field_tiktok}</arg>
<doc>Get element text (for hybrid and mobile browser use `xpath` locator, others might cause problem)</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322867" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${tiktok}</arg>
<arg>${USER1["tiktok"]}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2025-05-15T20:15:13.322941" elapsed="0.000014"/>
</kw>
<status status="FAIL" start="2025-05-15T20:15:11.861828" elapsed="1.461254">StaleElementReferenceException: Message: Cached elements 'By.xpath: //android.widget.TextView[@text="Atualizar dados de usuário"]' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.xpath: //android.widget.TextView[@text="Atualizar dados de usuário"]' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1119)</status>
</kw>
<status status="FAIL" start="2025-05-15T20:15:09.912776" elapsed="3.410417">StaleElementReferenceException: Message: Cached elements 'By.xpath: //android.widget.TextView[@text="Atualizar dados de usuário"]' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.xpath: //android.widget.TextView[@text="Atualizar dados de usuário"]' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1119)</status>
</kw>
<tag>bdd</tag>
<status status="FAIL" start="2025-05-15T20:14:14.139631" elapsed="59.183885">StaleElementReferenceException: Message: Cached elements 'By.xpath: //android.widget.TextView[@text="Atualizar dados de usuário"]' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.xpath: //android.widget.TextView[@text="Atualizar dados de usuário"]' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.GetElementAttribute.safeHandle(GetElementAttribute.java:23)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:259)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:253)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:1119)</status>
</test>
<status status="FAIL" start="2025-05-15T20:14:13.506883" elapsed="59.817604"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">bdd</stat>
</tag>
<suite>
<stat name="modifyUser" id="s1" pass="0" fail="1" skip="0">modifyUser</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
